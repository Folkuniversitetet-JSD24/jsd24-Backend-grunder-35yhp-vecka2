√ñvningar

üß© L√§tta √ñvningar (1-2)

1: Skapa en ny route som returnerar ditt namn:

Endpoint: /api/name

Response:
{ "name": "Ditt Namn" }

Tips: Anv√§nd res.json().
-------------------------------------------
2: Skicka en parameter i URL:en:

Endpoint: /api/greet/:name

Exempelanrop: /api/greet/Alice

Response:
{ "message": "Hej Alice!" }

Tips: Anv√§nd req.params.name.
-------------------------------------------
-------------------------------------------
-------------------------------------------
üîß Medelsv√•ra √ñvningar (3-4)

3: G√∂r en GET-route som h√§mtar data fr√•n ett objekt:

Objektet ska inneh√•lla information om n√•gra kurser:
const courses = [
  { id: 1, name: 'JavaScript Grundkurs' },
  { id: 2, name: 'Backend med Express' }
];

Endpoint: /api/courses

Response:
[
  { "id": 1, "name": "JavaScript Grundkurs" },
  { "id": 2, "name": "Backend med Express" }
]
-------------------------------------------
4: POST-request som tar emot data:

Endpoint: /api/add

Metod: POST

Inneh√•ll i body:
{ "title": "Ny kurs", "description": "L√§r dig mer om Express" }

Spara kursen i en array och returnera hela listan.
-------------------------------------------
-------------------------------------------
-------------------------------------------
üöÄ Sv√•ra √ñvningar (5-6)

5: Implementera en DELETE-route:

Endpoint: /api/courses/:id

Anv√§nd req.params f√∂r att hitta kursen med angivet ID och ta bort den.

Returnera den uppdaterade listan.
-------------------------------------------
6: Skapa en PUT-route som uppdaterar en kurs:

Endpoint: /api/courses/:id

Metod: PUT

Inneh√•ll i body:
{ "name": "Uppdaterad kurs" }

Uppdatera kursen med motsvarande ID och returnera den uppdaterade listan.
-------------------------------------------
-------------------------------------------
-------------------------------------------
üíæ Bonus: Middleware f√∂r Loggning

7:L√§gg till en middleware som loggar alla inkommande requests:
app.use((req, res, next) => {
    console.log(`${req.method} ${req.url}`);
    next();
});
-------------------------------------------
-------------------------------------------
-------------------------------------------
‚úÖ Reflektion och Avslutning
Hur k√§nns det att arbeta med Express?
Vilka utmaningar st√∂tte ni p√•?
Hur kan vi ut√∂ka API:et f√∂r att hantera mer komplex data?